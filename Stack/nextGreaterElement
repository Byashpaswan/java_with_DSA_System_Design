import java.util.*;

public class nextGreaterElement {

    static void printNextGreater2(int arr[]) {
        int n = arr.length;
        ArrayList<Integer> ans = new ArrayList<>();
        ArrayDeque<Integer> st = new ArrayDeque<>();
        st.push(arr[n - 1]);
        ans.add(-1);

        for (int i = n - 2; i >= 0; i--) {
            while (st.isEmpty() == false && st.peek() <= arr[i]) {
                st.pop();
            }

            int ng = st.isEmpty() ? -1 : st.peek();
            ans.add(ng);

            st.push(arr[i]);

        }

        Collections.reverse(ans);

        for (int it : ans)
            System.out.print(it + " ");
    }

    // TC:O(N^2)
    static void printNextGreater(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            int j;
            for (j = i + 1; j < n; j++) {
                if (arr[j] > arr[i]) {
                    System.out.print(arr[j] + " ");
                    break;
                }
            }

            if (j == n)
                System.out.print(-1 + " ");
        }
    }

    public static void main(String[] args) {
        int arr[] = new int[] { 5, 15, 10, 8, 6, 12, 9, 18 };

        printNextGreater(arr);
        System.out.println();

        printNextGreater2(arr);
    }

}
