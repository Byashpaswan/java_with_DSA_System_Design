class TwoStacks {
    int arr[];
    int cap, top1, top2;

    TwoStacks(int n) {
        cap = n;
        arr = new int[n];
        top1 = -1;
        top2 = n;

    }

    void push1(int item) {
        if (top1 < top2 - 1) {
            top1++;
            arr[top1] = item;
        } else {
            System.out.println("Stack Over flow");
            System.exit(1);
        }

    }

    void push2(int item) {
        if (top1 < top2 - 1) {
            top2--;
            arr[top2] = item;
        }

        else {
            System.out.println("Stack over flow ");
            System.exit(1);
        }
    }

    int pop1() {
        if (top1 >= 0) {
            int x = arr[top1];
            top1--;
            return x;
        } else {
            System.out.println("Stack Under flow ");
            System.exit(1);
        }

        return 0;
    }

    int pop2() {
        if (top2 < cap) {
            int x = arr[top2];
            top2++;
            return x;
        } else {
            System.out.println("Stack under flow ");
            System.exit(1);
        }
        return 0;
    }

    int size1() {
        return top1 + 1;
    }

    int size2() {
        return cap - top2;
    }

}

public class twoStackInArray {

    public static void main(String[] args) {

        TwoStacks ts = new TwoStacks(5);
        ts.push1(5);
        ts.push2(10);
        ts.push2(15);
        ts.push1(11);
        ts.push2(7);

        System.out.println("poped element from stack1 is : " + ts.pop1());
        ts.push2(40);
        System.out.println("poped element from stack2 is : " + ts.pop2());
        ts.push1(6);
        System.out.println("size of stak1 is " + ts.size1());
        System.out.println("size of stak2 is " + ts.size2());
    }

}
